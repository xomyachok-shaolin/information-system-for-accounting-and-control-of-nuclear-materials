unit UnitAddEmployee;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, System.ImageList,
  Vcl.ImgList, Data.DB, Data.Win.ADODB, Data.FMTBcd, Data.SqlExpr, Vcl.ExtCtrls,
  Vcl.ComCtrls, Vcl.DBCtrls, Vcl.Mask;

type
  TForm22 = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label5: TLabel;
    Edit1: TEdit;
    Edit2: TEdit;
    Edit3: TEdit;
    Button1: TButton;
    Button2: TButton;
    Panel1: TPanel;
    Panel2: TPanel;
    Label6: TLabel;
    Button4: TButton;
    DataSourcePosts: TDataSource;
    ADOQueryPosts: TADOQuery;
    Label4: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    DateTimePicker1: TDateTimePicker;
    ComboBox1: TComboBox;
    Label10: TLabel;
    Label11: TLabel;
    Memo1: TMemo;
    Panel3: TPanel;
    Label12: TLabel;
    Edit7: TEdit;
    MaskEdit1: TMaskEdit;
    MaskEdit2: TMaskEdit;
    MaskEdit3: TMaskEdit;
    DBEdit1: TDBEdit;
    Label13: TLabel;
    CheckBox1: TCheckBox;
    DBLookupComboBox1: TDBLookupComboBox;
    DataSourceBoss: TDataSource;
    ADOQueryBoss: TADOQuery;
    ADOConnection1: TADOConnection;
    ADOStoredProc1: TADOStoredProc;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure DBEdit1Change(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }

  end;

var
  Form22 : TForm22;

implementation

{$R *.dfm}

uses UnitEmployee;

procedure TForm22.Button1Click(Sender: TObject);
begin

ADOStoredProc1.Prepared := true;
ADOStoredProc1.Parameters.Refresh;

if  Edit7.Text = '' then  begin
    Application.MessageBox('Введите табельный № сотрудника!', 'Ошибка', MB_OK or MB_ICONERROR);
    Exit;
end;
ADOStoredProc1.Parameters.Items[0].Value := Edit7.Text;

// test ADOQueryBoss.Fields[0].Text is null
if Trim(DBEdit1.Text) = '' then
  ADOStoredProc1.Parameters.Items[1].Value := null
else
  ADOStoredProc1.Parameters.Items[1].Value := ADOQueryBoss.Fields[0].Text;

if  DBLookupComboBox1.Text = '' then  begin
    Application.MessageBox('Выберите должность сотрудника!', 'Ошибка', MB_OK or MB_ICONERROR);
    Exit;
end;
ADOStoredProc1.Parameters.Items[2].Value := DBLookupComboBox1.KeyValue;


if  Edit1.Text = '' then  begin
    Application.MessageBox('Введите фамилию сотрудника!', 'Ошибка', MB_OK or MB_ICONERROR);
    Exit;
end;
ADOStoredProc1.Parameters.Items[3].Value := Edit7.Text;

if  Edit2.Text = '' then  begin
    Application.MessageBox('Введите имя сотрудника!', 'Ошибка', MB_OK or MB_ICONERROR);
    Exit;
end;
ADOStoredProc1.Parameters.Items[4].Value := Edit2.Text;

if  Edit3.Text = '' then  begin
    Application.MessageBox('Введите отчество сотрудника!', 'Ошибка', MB_OK or MB_ICONERROR);
    Exit;
end;
ADOStoredProc1.Parameters.Items[5].Value := Edit3.Text;

ADOStoredProc1.Parameters.Items[6].Value := DateTimePicker1.Date;
ADOStoredProc1.Parameters.Items[7].Value := ComboBox1.Text;
ADOStoredProc1.Parameters.Items[8].Value := Memo1.Text;

if  StringReplace(Trim(MaskEdit1.Text), ' ', '',
  [rfReplaceAll, rfIgnoreCase])  = '' then  begin
    Application.MessageBox('Введите паспортные данные сотрудника!', 'Ошибка', MB_OK or MB_ICONERROR);
    Exit;
end;
ADOStoredProc1.Parameters.Items[9].Value := StringReplace(Trim(MaskEdit1.Text), ' ', '',
  [rfReplaceAll, rfIgnoreCase]);

if  Trim(MaskEdit3.Text) = '' then  begin
    Application.MessageBox('Введите ИНН сотрудника!', 'Ошибка', MB_OK or MB_ICONERROR);
    Exit;
end;

ADOStoredProc1.Parameters.Items[10].Value := MaskEdit3.Text;

if StringReplace(StringReplace(Trim(MaskEdit2.Text), ' ', '',
  [rfReplaceAll, rfIgnoreCase]), '-', '',
  [rfReplaceAll, rfIgnoreCase]) = '' then  begin
    Application.MessageBox('Введите СНИЛС сотрудника!', 'Ошибка', MB_OK or MB_ICONERROR);
    Exit;
end;
ADOStoredProc1.Parameters.Items[11].Value := MaskEdit2.Text;

if CheckBox1.Checked = true then
  ADOStoredProc1.Parameters.Items[12].Value := 'y'
else
  ADOStoredProc1.Parameters.Items[12].Value := 'n';

Try
  ADOStoredProc1.ExecProc;
  Close;
except on E: Exception do
  MessageDlg(E.Message, mtError,[mbOK],0);
  end;


  Form19.ADOQueryEmployee.Requery;
  Form19.DBGrid2.SetFocus;
end;

procedure TForm22.Button2Click(Sender: TObject);
begin
  Close;
end;

procedure TForm22.Button4Click(Sender: TObject);
var  Form19: TForm19;
begin
  Form19 := TForm19.Create(Application);

  Form19.Button4.Visible := true;
  Form19.Button1.Visible := false;
  Form19.Button2.Visible := false;
  Form19.Button3.Visible := false;

  Form19.ShowModal;
end;

procedure TForm22.DBEdit1Change(Sender: TObject);
  var h1, h2:string;

begin
  h1 := DBEdit1.Text;
  h2 := QuotedStr(h1);

  with ADOQueryBoss do
  begin
    close;
    SQL.Clear;
    SQL.Add('select * from кадры where ФИО_СОТРУДНИКА = '+h2);
    open;
  end;

end;

end.
